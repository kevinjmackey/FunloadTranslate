//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\projects\YRC\Translate Funloads\FunloadAntlr\FunloadParser.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace FunloadTranslate {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="FunloadParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IFunloadParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.funload_file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunload_file([NotNull] FunloadParser.Funload_fileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.funload_file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunload_file([NotNull] FunloadParser.Funload_fileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.job_blocks"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJob_blocks([NotNull] FunloadParser.Job_blocksContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.job_blocks"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJob_blocks([NotNull] FunloadParser.Job_blocksContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.job_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJob_block([NotNull] FunloadParser.Job_blockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.job_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJob_block([NotNull] FunloadParser.Job_blockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] FunloadParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] FunloadParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.job_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJob_statement([NotNull] FunloadParser.Job_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.job_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJob_statement([NotNull] FunloadParser.Job_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.jcl_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJcl_statement([NotNull] FunloadParser.Jcl_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.jcl_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJcl_statement([NotNull] FunloadParser.Jcl_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.open_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpen_statement([NotNull] FunloadParser.Open_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.open_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpen_statement([NotNull] FunloadParser.Open_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.open_file_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpen_file_list([NotNull] FunloadParser.Open_file_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.open_file_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpen_file_list([NotNull] FunloadParser.Open_file_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.report_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReport_statement([NotNull] FunloadParser.Report_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.report_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReport_statement([NotNull] FunloadParser.Report_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.funload_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunload_statement([NotNull] FunloadParser.Funload_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.funload_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunload_statement([NotNull] FunloadParser.Funload_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.foreach_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForeach_statement([NotNull] FunloadParser.Foreach_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.foreach_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForeach_statement([NotNull] FunloadParser.Foreach_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_statement([NotNull] FunloadParser.If_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_statement([NotNull] FunloadParser.If_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.else_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElse_clause([NotNull] FunloadParser.Else_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.else_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElse_clause([NotNull] FunloadParser.Else_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.elseif_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseif_clause([NotNull] FunloadParser.Elseif_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.elseif_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseif_clause([NotNull] FunloadParser.Elseif_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.endif_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEndif_clause([NotNull] FunloadParser.Endif_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.endif_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEndif_clause([NotNull] FunloadParser.Endif_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.for_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor_statement([NotNull] FunloadParser.For_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.for_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor_statement([NotNull] FunloadParser.For_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.leave_for_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeave_for_statement([NotNull] FunloadParser.Leave_for_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.leave_for_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeave_for_statement([NotNull] FunloadParser.Leave_for_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.leave_repeat_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeave_repeat_statement([NotNull] FunloadParser.Leave_repeat_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.leave_repeat_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeave_repeat_statement([NotNull] FunloadParser.Leave_repeat_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.put_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPut_statement([NotNull] FunloadParser.Put_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.put_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPut_statement([NotNull] FunloadParser.Put_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.put_clauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPut_clauses([NotNull] FunloadParser.Put_clausesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.put_clauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPut_clauses([NotNull] FunloadParser.Put_clausesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.put_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPut_clause([NotNull] FunloadParser.Put_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.put_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPut_clause([NotNull] FunloadParser.Put_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.position_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPosition_clause([NotNull] FunloadParser.Position_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.position_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPosition_clause([NotNull] FunloadParser.Position_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.format_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormat_spec([NotNull] FunloadParser.Format_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.format_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormat_spec([NotNull] FunloadParser.Format_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.missing_default_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMissing_default_clause([NotNull] FunloadParser.Missing_default_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.missing_default_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMissing_default_clause([NotNull] FunloadParser.Missing_default_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.error_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterError_clause([NotNull] FunloadParser.Error_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.error_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitError_clause([NotNull] FunloadParser.Error_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.sort_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSort_statement([NotNull] FunloadParser.Sort_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.sort_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSort_statement([NotNull] FunloadParser.Sort_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.column_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumn_name([NotNull] FunloadParser.Column_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.column_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumn_name([NotNull] FunloadParser.Column_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.occurs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOccurs([NotNull] FunloadParser.OccursContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.occurs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOccurs([NotNull] FunloadParser.OccursContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.output_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutput_statement([NotNull] FunloadParser.Output_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.output_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutput_statement([NotNull] FunloadParser.Output_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.ready_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReady_statement([NotNull] FunloadParser.Ready_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.ready_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReady_statement([NotNull] FunloadParser.Ready_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.repeat_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeat_statement([NotNull] FunloadParser.Repeat_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.repeat_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeat_statement([NotNull] FunloadParser.Repeat_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.end_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_statement([NotNull] FunloadParser.End_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.end_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_statement([NotNull] FunloadParser.End_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.select_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_statement([NotNull] FunloadParser.Select_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.select_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_statement([NotNull] FunloadParser.Select_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.select_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_clause([NotNull] FunloadParser.Select_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.select_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_clause([NotNull] FunloadParser.Select_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.when_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhen_clause([NotNull] FunloadParser.When_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.when_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhen_clause([NotNull] FunloadParser.When_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.otherwise_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOtherwise_clause([NotNull] FunloadParser.Otherwise_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.otherwise_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOtherwise_clause([NotNull] FunloadParser.Otherwise_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.end_select_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_select_clause([NotNull] FunloadParser.End_select_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.end_select_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_select_clause([NotNull] FunloadParser.End_select_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.skip_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSkip_statement([NotNull] FunloadParser.Skip_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.skip_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSkip_statement([NotNull] FunloadParser.Skip_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.logout_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogout_statement([NotNull] FunloadParser.Logout_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.logout_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogout_statement([NotNull] FunloadParser.Logout_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.print_all_information_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint_all_information_statement([NotNull] FunloadParser.Print_all_information_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.print_all_information_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint_all_information_statement([NotNull] FunloadParser.Print_all_information_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.unload_all_information_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnload_all_information_statement([NotNull] FunloadParser.Unload_all_information_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.unload_all_information_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnload_all_information_statement([NotNull] FunloadParser.Unload_all_information_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.special_funload_statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpecial_funload_statements([NotNull] FunloadParser.Special_funload_statementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.special_funload_statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpecial_funload_statements([NotNull] FunloadParser.Special_funload_statementsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.out_to_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOut_to_statement([NotNull] FunloadParser.Out_to_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.out_to_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOut_to_statement([NotNull] FunloadParser.Out_to_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.to_output_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTo_output_clause([NotNull] FunloadParser.To_output_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.to_output_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTo_output_clause([NotNull] FunloadParser.To_output_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] FunloadParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] FunloadParser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgs([NotNull] FunloadParser.ArgsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgs([NotNull] FunloadParser.ArgsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument_list([NotNull] FunloadParser.Argument_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument_list([NotNull] FunloadParser.Argument_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParams([NotNull] FunloadParser.ParamsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParams([NotNull] FunloadParser.ParamsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam([NotNull] FunloadParser.ParamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam([NotNull] FunloadParser.ParamContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.dsn_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDsn_expression([NotNull] FunloadParser.Dsn_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.dsn_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDsn_expression([NotNull] FunloadParser.Dsn_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.jcl_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJcl_expression([NotNull] FunloadParser.Jcl_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.jcl_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJcl_expression([NotNull] FunloadParser.Jcl_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment_statement([NotNull] FunloadParser.Assignment_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment_statement([NotNull] FunloadParser.Assignment_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] FunloadParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] FunloadParser.VariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.filename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilename([NotNull] FunloadParser.FilenameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.filename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilename([NotNull] FunloadParser.FilenameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.recin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRecin([NotNull] FunloadParser.RecinContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.recin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRecin([NotNull] FunloadParser.RecinContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] FunloadParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] FunloadParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] FunloadParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] FunloadParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.complex_conditional_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComplex_conditional_expression([NotNull] FunloadParser.Complex_conditional_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.complex_conditional_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComplex_conditional_expression([NotNull] FunloadParser.Complex_conditional_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.conditional_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditional_expression([NotNull] FunloadParser.Conditional_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.conditional_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditional_expression([NotNull] FunloadParser.Conditional_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.conditional_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditional_operator([NotNull] FunloadParser.Conditional_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.conditional_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditional_operator([NotNull] FunloadParser.Conditional_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.continuation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinuation([NotNull] FunloadParser.ContinuationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.continuation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinuation([NotNull] FunloadParser.ContinuationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.conjunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConjunction([NotNull] FunloadParser.ConjunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.conjunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConjunction([NotNull] FunloadParser.ConjunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.integer_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInteger_value([NotNull] FunloadParser.Integer_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.integer_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInteger_value([NotNull] FunloadParser.Integer_valueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant([NotNull] FunloadParser.ConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant([NotNull] FunloadParser.ConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] FunloadParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] FunloadParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.signed_int"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSigned_int([NotNull] FunloadParser.Signed_intContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.signed_int"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSigned_int([NotNull] FunloadParser.Signed_intContext context);
}
} // namespace FunloadTranslate
