//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\projects\YRC\Translate Funloads\FunloadAntlr\FunloadParser.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace FunloadTranslate {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IFunloadParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class FunloadParserBaseListener : IFunloadParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.funload_file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunload_file([NotNull] FunloadParser.Funload_fileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.funload_file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunload_file([NotNull] FunloadParser.Funload_fileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.job_blocks"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJob_blocks([NotNull] FunloadParser.Job_blocksContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.job_blocks"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJob_blocks([NotNull] FunloadParser.Job_blocksContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.job_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJob_block([NotNull] FunloadParser.Job_blockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.job_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJob_block([NotNull] FunloadParser.Job_blockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] FunloadParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] FunloadParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.job_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJob_statement([NotNull] FunloadParser.Job_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.job_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJob_statement([NotNull] FunloadParser.Job_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.jcl_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJcl_statement([NotNull] FunloadParser.Jcl_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.jcl_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJcl_statement([NotNull] FunloadParser.Jcl_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.open_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpen_statement([NotNull] FunloadParser.Open_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.open_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpen_statement([NotNull] FunloadParser.Open_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.open_file_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpen_file_list([NotNull] FunloadParser.Open_file_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.open_file_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpen_file_list([NotNull] FunloadParser.Open_file_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.report_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReport_statement([NotNull] FunloadParser.Report_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.report_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReport_statement([NotNull] FunloadParser.Report_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.funload_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunload_statement([NotNull] FunloadParser.Funload_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.funload_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunload_statement([NotNull] FunloadParser.Funload_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.foreach_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeach_statement([NotNull] FunloadParser.Foreach_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.foreach_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeach_statement([NotNull] FunloadParser.Foreach_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_statement([NotNull] FunloadParser.If_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_statement([NotNull] FunloadParser.If_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.else_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse_clause([NotNull] FunloadParser.Else_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.else_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse_clause([NotNull] FunloadParser.Else_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.elseif_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseif_clause([NotNull] FunloadParser.Elseif_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.elseif_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseif_clause([NotNull] FunloadParser.Elseif_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.endif_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEndif_clause([NotNull] FunloadParser.Endif_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.endif_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEndif_clause([NotNull] FunloadParser.Endif_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.for_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_statement([NotNull] FunloadParser.For_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.for_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_statement([NotNull] FunloadParser.For_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.leave_for_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeave_for_statement([NotNull] FunloadParser.Leave_for_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.leave_for_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeave_for_statement([NotNull] FunloadParser.Leave_for_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.leave_repeat_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeave_repeat_statement([NotNull] FunloadParser.Leave_repeat_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.leave_repeat_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeave_repeat_statement([NotNull] FunloadParser.Leave_repeat_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.put_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPut_statement([NotNull] FunloadParser.Put_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.put_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPut_statement([NotNull] FunloadParser.Put_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.put_clauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPut_clauses([NotNull] FunloadParser.Put_clausesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.put_clauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPut_clauses([NotNull] FunloadParser.Put_clausesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.put_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPut_clause([NotNull] FunloadParser.Put_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.put_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPut_clause([NotNull] FunloadParser.Put_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.position_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPosition_clause([NotNull] FunloadParser.Position_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.position_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPosition_clause([NotNull] FunloadParser.Position_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.format_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormat_spec([NotNull] FunloadParser.Format_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.format_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormat_spec([NotNull] FunloadParser.Format_specContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.missing_default_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMissing_default_clause([NotNull] FunloadParser.Missing_default_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.missing_default_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMissing_default_clause([NotNull] FunloadParser.Missing_default_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.error_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterError_clause([NotNull] FunloadParser.Error_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.error_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitError_clause([NotNull] FunloadParser.Error_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.sort_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSort_statement([NotNull] FunloadParser.Sort_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.sort_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSort_statement([NotNull] FunloadParser.Sort_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.column_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_name([NotNull] FunloadParser.Column_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.column_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_name([NotNull] FunloadParser.Column_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.occurs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOccurs([NotNull] FunloadParser.OccursContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.occurs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOccurs([NotNull] FunloadParser.OccursContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.output_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutput_statement([NotNull] FunloadParser.Output_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.output_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutput_statement([NotNull] FunloadParser.Output_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.ready_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReady_statement([NotNull] FunloadParser.Ready_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.ready_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReady_statement([NotNull] FunloadParser.Ready_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.repeat_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeat_statement([NotNull] FunloadParser.Repeat_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.repeat_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeat_statement([NotNull] FunloadParser.Repeat_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.end_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnd_statement([NotNull] FunloadParser.End_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.end_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnd_statement([NotNull] FunloadParser.End_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.select_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_statement([NotNull] FunloadParser.Select_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.select_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_statement([NotNull] FunloadParser.Select_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.select_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_clause([NotNull] FunloadParser.Select_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.select_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_clause([NotNull] FunloadParser.Select_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.when_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhen_clause([NotNull] FunloadParser.When_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.when_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhen_clause([NotNull] FunloadParser.When_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.otherwise_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOtherwise_clause([NotNull] FunloadParser.Otherwise_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.otherwise_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOtherwise_clause([NotNull] FunloadParser.Otherwise_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.end_select_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnd_select_clause([NotNull] FunloadParser.End_select_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.end_select_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnd_select_clause([NotNull] FunloadParser.End_select_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.skip_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSkip_statement([NotNull] FunloadParser.Skip_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.skip_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSkip_statement([NotNull] FunloadParser.Skip_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.logout_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogout_statement([NotNull] FunloadParser.Logout_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.logout_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogout_statement([NotNull] FunloadParser.Logout_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.print_all_information_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint_all_information_statement([NotNull] FunloadParser.Print_all_information_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.print_all_information_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint_all_information_statement([NotNull] FunloadParser.Print_all_information_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.unload_all_information_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnload_all_information_statement([NotNull] FunloadParser.Unload_all_information_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.unload_all_information_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnload_all_information_statement([NotNull] FunloadParser.Unload_all_information_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.special_funload_statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSpecial_funload_statements([NotNull] FunloadParser.Special_funload_statementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.special_funload_statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSpecial_funload_statements([NotNull] FunloadParser.Special_funload_statementsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.out_to_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOut_to_statement([NotNull] FunloadParser.Out_to_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.out_to_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOut_to_statement([NotNull] FunloadParser.Out_to_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.to_output_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTo_output_clause([NotNull] FunloadParser.To_output_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.to_output_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTo_output_clause([NotNull] FunloadParser.To_output_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument([NotNull] FunloadParser.ArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument([NotNull] FunloadParser.ArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.args"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgs([NotNull] FunloadParser.ArgsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.args"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgs([NotNull] FunloadParser.ArgsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument_list([NotNull] FunloadParser.Argument_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument_list([NotNull] FunloadParser.Argument_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.params"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParams([NotNull] FunloadParser.ParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.params"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParams([NotNull] FunloadParser.ParamsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam([NotNull] FunloadParser.ParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam([NotNull] FunloadParser.ParamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.dsn_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDsn_expression([NotNull] FunloadParser.Dsn_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.dsn_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDsn_expression([NotNull] FunloadParser.Dsn_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.jcl_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJcl_expression([NotNull] FunloadParser.Jcl_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.jcl_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJcl_expression([NotNull] FunloadParser.Jcl_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.assignment_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment_statement([NotNull] FunloadParser.Assignment_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.assignment_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment_statement([NotNull] FunloadParser.Assignment_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] FunloadParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] FunloadParser.VariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.filename"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFilename([NotNull] FunloadParser.FilenameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.filename"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFilename([NotNull] FunloadParser.FilenameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.recin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecin([NotNull] FunloadParser.RecinContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.recin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecin([NotNull] FunloadParser.RecinContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] FunloadParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] FunloadParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] FunloadParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] FunloadParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.complex_conditional_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComplex_conditional_expression([NotNull] FunloadParser.Complex_conditional_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.complex_conditional_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComplex_conditional_expression([NotNull] FunloadParser.Complex_conditional_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.conditional_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditional_expression([NotNull] FunloadParser.Conditional_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.conditional_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditional_expression([NotNull] FunloadParser.Conditional_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.conditional_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditional_operator([NotNull] FunloadParser.Conditional_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.conditional_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditional_operator([NotNull] FunloadParser.Conditional_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.continuation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinuation([NotNull] FunloadParser.ContinuationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.continuation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinuation([NotNull] FunloadParser.ContinuationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.conjunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConjunction([NotNull] FunloadParser.ConjunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.conjunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConjunction([NotNull] FunloadParser.ConjunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.integer_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInteger_value([NotNull] FunloadParser.Integer_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.integer_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInteger_value([NotNull] FunloadParser.Integer_valueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] FunloadParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] FunloadParser.ConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] FunloadParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] FunloadParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FunloadParser.signed_int"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSigned_int([NotNull] FunloadParser.Signed_intContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FunloadParser.signed_int"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSigned_int([NotNull] FunloadParser.Signed_intContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace FunloadTranslate
